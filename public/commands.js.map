{"version":3,"file":"commands.js","mappings":"YAEA,IAMIA,EAFEC,EAAW,gFAKjBC,OAAOC,SAAQ,WACPH,EAAcE,OAAOE,QAAQC,QAAQC,IACzC,IA6BJJ,OAAOK,QAAQC,UAAU,uBAxBzB,SAA6BC,GAEzBT,EAAYC,SAASS,UACjB,SAAkBC,GACdA,EAAYC,SAAWV,OAAOW,kBAAkBC,WACrCH,EAAYP,QAASO,EAAYI,MAyBpDf,EAAYC,SAASe,SAASf,GAAU,SAACgB,GACjCA,EAAOL,SAAWV,OAAOW,kBAAkBC,UAI/CI,QAAQC,IAAI,gCAADC,OAAiCnB,IAH1CiB,QAAQG,MAAM,8BAADD,OAA+BH,EAAOI,MAAMC,SAI/D,KA7BQJ,QAAQG,MAAM,0BAGtB,GAYJ,G","sources":["webpack://onlive-microsoft-addin/./src/commands/commands.js"],"sourcesContent":["// 1. How to construct online meeting details.\n// Not shown: How to get the meeting organizer's ID and other details from your service.\nconst newBody = '<br>' +\n    '<a href=\"https://events-staging.onlive.site/event/71edc0d8-c99e-4b30-8c05-ebd5b5a71248\" target=\"_blank\">Join Onlive.site meeting</a>' +\n    '<br><br>';\n\nconst location = 'https://events-staging.onlive.site/event/71edc0d8-c99e-4b30-8c05-ebd5b5a71248';\n\nlet mailboxItem;\n\n// Office is ready.\nOffice.onReady(function () {\n        mailboxItem = Office.context.mailbox.item;\n    }\n);\n\n// 2. How to define and register a function command named `insertOnliveMeeting` (referenced in the manifest)\n//    to update the meeting body with the online meeting details.\nfunction insertOnliveMeeting(event) {\n    // Get HTML body from the client.\n    mailboxItem.location.getAsync(\n        function callback(asyncResult) {\n        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n            updateBody(asyncResult.context, asyncResult.value);\n        } else {\n            console.error(\"Failed to get Location.\");\n            return;\n        }\n    });\n    /*mailboxItem.body.getAsync(\"html\",\n        { asyncContext: event },\n        function (getBodyResult) {\n            if (getBodyResult.status === Office.AsyncResultStatus.Succeeded) {\n                updateBody(getBodyResult.asyncContext, getBodyResult.value);\n            } else {\n                console.error(\"Failed to get HTML body.\");\n                getBodyResult.asyncContext.completed({ allowEvent: false });\n            }\n        }\n    );*/\n}\n// Register the function.\nOffice.actions.associate(\"insertOnliveMeeting\", insertOnliveMeeting);\n\n// 3. How to implement a supporting function `updateBody`\n//    that appends the online meeting details to the current body of the meeting.\nfunction updateBody(event, existingBody) {\n    // Append new body to the existing body.\n    mailboxItem.location.setAsync(location, (result) => {\n        if (result.status !== Office.AsyncResultStatus.Succeeded) {\n          console.error(`Action failed with message ${result.error.message}`);\n          return;\n        }\n        console.log(`Successfully set location to ${location}`);\n    });\n    /*mailboxItem.body.setAsync(existingBody + newBody,\n        { asyncContext: event, coercionType: \"html\" },\n        function (setBodyResult) {\n            if (setBodyResult.status === Office.AsyncResultStatus.Succeeded) {\n                setBodyResult.asyncContext.completed({ allowEvent: true });\n            } else {\n                console.error(\"Failed to set HTML body.\");\n                setBodyResult.asyncContext.completed({ allowEvent: false });\n            }\n        }\n    );*/\n}"],"names":["mailboxItem","location","Office","onReady","context","mailbox","item","actions","associate","event","getAsync","asyncResult","status","AsyncResultStatus","Succeeded","value","setAsync","result","console","log","concat","error","message"],"sourceRoot":""}